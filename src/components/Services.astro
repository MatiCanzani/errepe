---
import { Image } from "astro:assets";
import Logo from "../images/logo-black.svg";
import servicesData from "../data/Services";
import Card from "./Card.astro";
---

<div
  class="container w-11/12 md:w-full flex mx-auto justify-center items-end flex-col h-full py-20 relative"
  id="textSection"
>
  <div class="w-full flex justify-between items-center my-4 xl:my-20">
    <p
      class="uppercase text-black text-9xl md:text-[16rem] opacity-10 font-compactaBT leading-none"
    >
      errepé
    </p>
    <Image src={Logo} alt="ERP" class="fill-gold w-12 md:w-24" />
  </div>
  <div
    class="w-full flex flex-col justify-between items-start my-4 md:flex-row xl:my-20"
  >
    <div class="text-center md:text-left w-full md:w-2/6">
      <h2
        class="text-deep-blue text-xl md:text-2xl font-FormaDJRMicro font-extrabold pt-[105px] w-full text-right mb-10 xl:mb-0 md:ml-[50%]"
      >
        A lo que nos dedicamos:
      </h2>
    </div>
    <div class="text-right w-full md:w-4/6">
      <div id="services" class="flex flex-col text-end items-end grow">
        {
          servicesData &&
            servicesData.map((service) => (
              <>
                <button
                  class="uppercase text-deep-blue text-[5rem] md:text-[8rem] xl:text-[10rem] font-compactaBT leading-[100%] service-word touch-auto"
                  id={service.title}
                >
                  <span class="link-underline link-underline-black">
                    {service.title}
                    <span class="block max-w-0 group-hover:max-w-full transition-all duration-500 h-0.5 bg-black" />
                  </span>
                </button>
                <Card
                  description={service.description}
                  id={service.id}
                  imageUrl={service.image}
                />
              </>
            ))
        }
      </div>
    </div>
  </div>

  <div class="text-right h-full w-full">
    <p
      class="text-deep-blue text-xl md:text-2xl font-extrabold font-FormaDJRMicro mt-10 pl-[30%]"
    >
      Poseemos nuestra propia infraestrucutura, contando con un centro de
      producción gastronómico propio, que brinda serivicio tanto para eventos
      como para comercios.
    </p>
    <div
      class="text-right gap-4 flex justify-center flex-col text-deep-blue text-xl md:text-2xl font-extrabold font-FormaDJRMicro mt-10"
    >
      <p class="font-bold italic">Descarga Nuestro Catálogos</p>
      <div
        class="flex flex-col md:flex-row justify-end gap-4 font-extrabold text-right"
      >
        <a
          href="../../public/Catalogos/Carpas/Carpas.zip"
          download
          class="group transition duration-300"
          >Carpas<span
            class="block max-w-0 group-hover:max-w-full transition-all duration-500 h-0.5 bg-black"
          ></span></a
        >
        <span class="hidden md:block">-</span>
        <a
          href="../../public/Catalogos/Iluminación/Iluminación.zip"
          download
          class="group transition duration-300"
          >Iluminación<span
            class="block max-w-0 group-hover:max-w-full transition-all duration-500 h-0.5 bg-black"
          ></span></a
        >
        <span class="hidden md:block">-</span>
        <a
          href="../../public/Catalogos/Mobiliarios/Mobiliarios.zip"
          download
          class="group transition duration-300"
          >Mobiliarios<span
            class="block max-w-0 group-hover:max-w-full transition-all duration-500 h-0.5 bg-black"
          ></span></a
        >
        <span class="hidden md:block">-</span>
        <a
          href="../../public/Catalogos/Arreglos Florales/Catalogo de Arreglos Florales.pdf"
          download
          class="group transition duration-300"
          >Arreglos Florales<span
            class="block max-w-0 group-hover:max-w-full transition-all duration-500 h-0.5 bg-black"
          ></span></a
        >
        <a
          href="../../public/Catalogos/Catering/Catering.pdf"
          download
          class="group transition duration-300"
          >Catering<span
            class="block max-w-0 group-hover:max-w-full transition-all duration-500 h-0.5 bg-black"
          ></span></a
        >
      </div>
    </div>
  </div>
</div>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  import SplitType from "split-type";
  import servicesData from "../data/Services";

  gsap.registerPlugin(ScrollTrigger);

  const split = new SplitType(".service-word");

  gsap.from(".char", {
    stagger: 0.1,
    delay: 0.2,
    opacity: 0.1,
    duration: 0.1,
    scrollTrigger: {
      trigger: "#textSection",
      once: true,
      scrub: 1,
      start: "top center",
      end: "bottom bottom",
    },
  });

  let currentVisibleCardId: string | null = null;

  const funcToggle = (service: { id?: string }) => {
    console.log("service", service);
    const card = document.getElementById(`${service.id}`);
    console.log("card", card);

    if (currentVisibleCardId && currentVisibleCardId !== service.id) {
      const currentCard = document.getElementById(currentVisibleCardId);
      console.log("currentCard", currentCard);
      if (currentCard) {
        currentCard.classList.add("hidden");
      }
    }

    if (card) {
      card.classList.toggle("hidden");
      currentVisibleCardId = card.classList.contains("hidden")
        ? null
        : service.id;

      if (!card.classList.contains("hidden")) {
        gsap.from(card, {
          opacity: 0,
          y: -50,
        });
      }
    }
  };

  const serviceTitles = document.querySelectorAll(".service-word");

  serviceTitles.forEach((serviceTitle) => {
    serviceTitle.addEventListener("click", () => {
      const clickedTitle = serviceTitle.textContent.trim();
      console.log("ficlickedTitlerst", clickedTitle);
      const service = servicesData.find((s) => s.title === clickedTitle);
      if (service) {
        funcToggle(service);
      }
    });
  });
</script>

<style>
  .link-underline {
    border-bottom-width: 0;
    background-image: linear-gradient(transparent, transparent),
      linear-gradient(#fff, #fff);
    background-size: 0 3px;
    background-position: 0 100%;
    background-repeat: no-repeat;
    transition: background-size 0.5s ease-in-out;
  }

  .link-underline-black {
    background-image: linear-gradient(transparent, transparent),
      linear-gradient(#121927, #121927);
  }

  .link-underline:hover {
    background-size: 100% 3px;
    background-position: 0 100%;
  }
</style>
